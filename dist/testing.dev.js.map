{"version":3,"sources":["testing.js"],"names":["isArmstrongNumber","num","sum","temp","numString","toString","numDigits","length","digit","Math","pow","floor","readline","require","rl","createInterface","input","process","stdin","output","stdout","question","t","i","parseInt","console","log","close"],"mappings":";;AAAA;AACA,SAASA,iBAAT,CAA2BC,GAA3B,EAAgC;AAC9B,MAAIC,GAAG,GAAG,CAAV;AACA,MAAIC,IAAI,GAAGF,GAAX;AACA,MAAMG,SAAS,GAAGH,GAAG,CAACI,QAAJ,EAAlB;AACA,MAAMC,SAAS,GAAGF,SAAS,CAACG,MAA5B;;AAEA,SAAOJ,IAAI,GAAG,CAAd,EAAiB;AACf,QAAMK,KAAK,GAAGL,IAAI,GAAG,EAArB;AACAD,IAAAA,GAAG,IAAIO,IAAI,CAACC,GAAL,CAASF,KAAT,EAAgBF,SAAhB,CAAP;AACAH,IAAAA,IAAI,GAAGM,IAAI,CAACE,KAAL,CAAWR,IAAI,GAAG,EAAlB,CAAP;AACD;;AAED,SAAOD,GAAG,KAAKD,GAAf;AACD,C,CAED;;;AACA,IAAMW,QAAQ,GAAGC,OAAO,CAAC,UAAD,CAAxB;;AACA,IAAMC,EAAE,GAAGF,QAAQ,CAACG,eAAT,CAAyB;AAClCC,EAAAA,KAAK,EAAEC,OAAO,CAACC,KADmB;AAElCC,EAAAA,MAAM,EAAEF,OAAO,CAACG;AAFkB,CAAzB,CAAX;AAKAN,EAAE,CAACO,QAAH,CAAY,kCAAZ,EAAgD,UAACC,CAAD,EAAO;AAAA,6BAE5CC,CAF4C;AAGnDT,IAAAA,EAAE,CAACO,QAAH,CAAY,6BAAZ,EAA2C,UAACpB,GAAD,EAAS;AAClD,UAAID,iBAAiB,CAACwB,QAAQ,CAACvB,GAAD,CAAT,CAArB,EAAsC;AACpCwB,QAAAA,OAAO,CAACC,GAAR,WAAezB,GAAf;AACD,OAFD,MAEO;AACLwB,QAAAA,OAAO,CAACC,GAAR,WAAezB,GAAf;AACD,OALiD,CAOlD;;;AACA,UAAIsB,CAAC,KAAKD,CAAC,GAAG,CAAd,EAAiB;AACfR,QAAAA,EAAE,CAACa,KAAH;AACD;AACF,KAXD;AAHmD;;AACrD;AACA,OAAK,IAAIJ,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGD,CAApB,EAAuBC,CAAC,EAAxB,EAA4B;AAAA,UAAnBA,CAAmB;AAa3B;AACF,CAhBD,E,CAkBA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["// Function to check if a number is an Armstrong number\r\nfunction isArmstrongNumber(num) {\r\n  let sum = 0;\r\n  let temp = num;\r\n  const numString = num.toString();\r\n  const numDigits = numString.length;\r\n\r\n  while (temp > 0) {\r\n    const digit = temp % 10;\r\n    sum += Math.pow(digit, numDigits);\r\n    temp = Math.floor(temp / 10);\r\n  }\r\n\r\n  return sum === num;\r\n}\r\n\r\n// Read the number of test cases\r\nconst readline = require(\"readline\");\r\nconst rl = readline.createInterface({\r\n  input: process.stdin,\r\n  output: process.stdout,\r\n});\r\n\r\nrl.question(\"Enter the number of test cases: \", (t) => {\r\n  // Process each test case\r\n  for (let i = 0; i < t; i++) {\r\n    rl.question(\"Enter the number to check: \", (num) => {\r\n      if (isArmstrongNumber(parseInt(num))) {\r\n        console.log(`${num} is an ARMSTRONG number`);\r\n      } else {\r\n        console.log(`${num} is NOT an ARMSTRONG number`);\r\n      }\r\n\r\n      // Check if all test cases have been processed\r\n      if (i === t - 1) {\r\n        rl.close();\r\n      }\r\n    });\r\n  }\r\n});\r\n\r\n// [] Implement Search\r\n// -search by prompt\r\n// -search by tag\r\n// -search by username\r\n//[] Implement Click on Tag\r\n//[] Implement View other profiles\r\n"],"file":"testing.dev.js"}